\name{RPPASet-class}
\alias{RPPASet-class}
\alias{RPPASet}
\alias{summary,RPPASet-method}
\alias{write.summary,RPPASet-method}
\alias{is.RPPASet}
\docType{class}
\title{Class "RPPASet"}
\description{
  The RPPASet class fits supercurves to an entire directory of
  reverse-phase protein array experiments.
}
\usage{
RPPASet(path,
        designparams,
        fitparams,
        spatialparams=NULL,
        doprefitqc=FALSE,
        monitor=SCProgressMonitor(),
        antibodyfile=NULL,
        software="microvigene")
is.RPPASet(x)
\S4method{summary}{RPPASet}(object,
                            \dots)
\S4method{write.summary}{RPPASet}(object,
                                  path,
                                  prefix="supercurve",
                                  graphs=TRUE,
                                  tiffdir=NULL,
                                  monitor=NULL,
                                  \dots)
}
\arguments{
  \item{path}{character string specifying a directory. In the case of
    the \code{RPPASet} generator, it specifies the directory containing
    the quantification files to be processed. In the case of the
    \code{write.summary} method, it specifies the directory where output
    should be stored.}
  \item{designparams}{object of class \code{RPPADesignParams} describing
    features common to all quantification files}
  \item{fitparams}{object of class \code{RPPAFitParams} containing
    parameters used to fit the supercurve model}
  \item{spatialparams}{object of class \code{RPPASpatialParams} containing
    parameters used to perform spatial adjustment, or \code{NULL}}
  \item{doprefitqc}{logical scalar. If \code{TRUE}, perform pre-fit quality
    control.}
  \item{monitor}{object of (sub)class \code{ProgressMonitor}}
  \item{antibodyfile}{character string specifying filename cantaining mapping
    from quantification files to antibodies}
  \item{software}{character string specifying the software used to generate
    the quantification file (see section \sQuote{Details} of
    \code{\link{RPPA}})}
  \item{object}{object of class \code{RPPASet}}
  \item{prefix}{character string used as a filename prefix on files generated by
    the write.summary method.}
  \item{graphs}{logical scalar. If \code{TRUE}, produce fit graphs.}
  \item{tiffdir}{character string specifying the directory containing the
    \acronym{TIFF} images corresponding to the quantification files}
  \item{x}{object of class \code{RPPASet}}
  \item{\dots}{extra arguments for generic or plotting routines}
}
\details{
  Quantify all the slides in a directory using \code{RPPASet} generator.
  This returns an object containing slide data and fits for each slide.
  Typically this is followed by a call to \code{write.summary} to write
  the resulting quantifications and diagnostic plots to a directory.

  The \code{write.summary} method (indirectly) generates three \acronym{CSV}
  files: one for the raw concentrations, one for the \eqn{R^2} statistics,
  and one for the polished concentrations.
  If \code{tiffdir} is \code{NULL}, the directory is assumed to be a sibling
  directory to \code{path} named "tif". If \code{graphs} is \code{TRUE},
  two \acronym{PNG} files containing output graphs are created per antibody.
  The ImageMagick \file{convert} binary is then used to merge these output
  graphs with the source \acronym{TIFF} files, generating an additional
  \acronym{JPEG} file per antibody.
}
\section{Objects from the Class}{
  Although objects of the class can (in theory) be created by a direct call
  to \link[methods]{new}, the only realistic method is to use the
  \code{RPPASet} generator function.
}
\section{Slots}{
  \describe{
    \item{\code{call}:}{object of class \code{call} specifying the function
      call that was used during construction}
    \item{\code{version}:}{character string containing the version of this
      package used to construct the object}
    \item{\code{design}:}{object of class \code{RPPADesign}, common to all
      the slides}
    \item{\code{rppas}:}{array of objects of class \code{RPPA}}
    \item{\code{spatialparams}}{object of class \code{RPPASpatialParams}
      that was used to perform spatial adjustment, or \code{NULL}}
    \item{\code{prefitqcs}:}{array of objects of class
      \code{RPPAPreFitQCParams}}
    \item{\code{fitparams}:}{object of class \code{RPPAFitParams} that was
      used to construct the model fits}
    \item{\code{fits}:}{array of fitted objects of class \code{RPPAFit}}
    \item{\code{completed}:}{logical matrix specifying stage completion
      for each slide}
  }
}
\section{Methods}{
  \describe{
    \item{summary(object, \dots)}{Creates an object of class
      \code{RPPASetSummary}.}
    \item{write.summary(object, path, prefix, graphs, tiffdir, \dots)}{
      Writes a record of the entire RPPASet, including fitted values,
      residuals, and images of the processed slides.}
  }
}
\value{
  The \code{RPPASet} generator returns an object of class \code{RPPASet}.

  The \code{is.RPPASet} method returns \code{TRUE} if its
  argument is an object of class \code{RPPASet}.

  The \code{summary} method returns an object of class \code{RPPASetSummary}.
}
\references{KRC}
\author{
  Kevin R. Coombes \email{kcoombes@mdanderson.org},
  P. Roebuck \email{plroebuck@mdanderson.org}
}
\seealso{
  \code{\link{RPPA}},
  \code{\link{RPPADesign}},
  \code{\link{RPPAFit}},
  \code{\link{RPPASetSummary}},
  \code{\link{SCProgressMonitor}}
}
\examples{
  \dontrun{
parentdir <- file.path("C:", "MyData")
txtdir <- file.path(parentdir, "txt")     # quantification files
imgdir <- file.path(parentdir, "tif")     # and corresponding image files
outdir <- file.path(parentdir, "results") # output files

designparams <- RPPADesignParams(grouping="blockSample",
                                 center=FALSE,
                                 aliasfile="layoutInfo.tsv",
                                 designfile="slidedesign.tsv")
fitparams <- RPPAFitParams(measure="Mean.Net",
                           method="nlrob",
                           model="cobs",
                           ignoreNegative=FALSE,
                           warnLevel=-1,
                           verbose=FALSE)
monitor <- SCProgressMonitor()
rppaset <- RPPASet(txtdir,
                   designparams,
                   fitparams,
                   monitor=monitor)
write.summary(rppaset,
              path=outdir,
              graphs=TRUE,
              tiffdir=imgdir,
              monitor=monitor)
  }
}
\keyword{classes}
\keyword{models}
\keyword{nonlinear}
\keyword{nonparametric}
\keyword{regression}
\keyword{robust}

